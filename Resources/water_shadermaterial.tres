[gd_resource type="ShaderMaterial" load_steps=9 format=2]

[ext_resource path="res://Resources/water_noisetexture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
constant = Color( 0.898438, 0, 1, 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
function = 0

[sub_resource type="VisualShaderNodeInput" id=4]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=5]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorOp" id=6]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShader" id=7]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_toon;

uniform sampler2D tex_frg_7;


void vertex() {
// Salida:0

}

void fragment() {
// Entrada:6
	vec3 n_out6p0;
	n_out6p0 = vec3(UV,0.0);

// Texture:7
	vec3 n_out7p0;
	float n_out7p1;
	vec4 tex_frg_7_read = texture( tex_frg_7 , n_out6p0.xy );
	n_out7p0 = tex_frg_7_read.rgb;
	n_out7p1 = tex_frg_7_read.a;

// Color:2
	vec3 n_out2p0;
	float n_out2p1;
	n_out2p0 = vec3(0.898438,0.000000,1.000000);
	n_out2p1 = 1.000000;

// ColorOp:8
	vec3 n_out8p0;
	n_out8p0=min(n_out7p0,n_out2p0);

// Entrada:4
	float n_out4p0;
	n_out4p0 = TIME;

// ScalarFunc:5
	float n_out5p0;
	n_out5p0 = sin(n_out4p0);

// Salida:0
	ALBEDO = n_out8p0;
	METALLIC = n_out5p0;

}

void light() {
// Salida:0

}
"
graph_offset = Vector2( 3.05176e-005, -131.361 )
modes/cull = 2
modes/depth_draw = 3
modes/specular = 3
nodes/fragment/0/position = Vector2( 620, 20 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 400, -40 )
nodes/fragment/4/node = SubResource( 2 )
nodes/fragment/4/position = Vector2( 40, 340 )
nodes/fragment/5/node = SubResource( 3 )
nodes/fragment/5/position = Vector2( 220, 340 )
nodes/fragment/6/node = SubResource( 4 )
nodes/fragment/6/position = Vector2( 0, -20 )
nodes/fragment/7/node = SubResource( 5 )
nodes/fragment/7/position = Vector2( 220, -20 )
nodes/fragment/8/node = SubResource( 6 )
nodes/fragment/8/position = Vector2( 420, 60 )
nodes/fragment/connections = PoolIntArray( 7, 0, 8, 0, 2, 0, 8, 1, 8, 0, 0, 0, 4, 0, 5, 0, 5, 0, 0, 2, 6, 0, 7, 0 )

[resource]
shader = SubResource( 7 )

